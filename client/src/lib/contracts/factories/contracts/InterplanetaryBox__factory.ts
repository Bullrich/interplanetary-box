/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  InterplanetaryBox,
  InterplanetaryBoxInterface,
} from "../../contracts/InterplanetaryBox";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "Key",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
      {
        internalType: "string",
        name: "fileName",
        type: "string",
      },
    ],
    name: "addFile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "files",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFiles",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200118238038062001182833981810160405281019062000037919062000390565b620000576200004b6200007760201b60201c565b6200007f60201b60201c565b80600190805190602001906200006f92919062000143565b505062000446565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001519062000410565b90600052602060002090601f016020900481019282620001755760008555620001c1565b82601f106200019057805160ff1916838001178555620001c1565b82800160010185558215620001c1579182015b82811115620001c0578251825591602001919060010190620001a3565b5b509050620001d09190620001d4565b5090565b5b80821115620001ef576000816000905550600101620001d5565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200025c8262000211565b810181811067ffffffffffffffff821117156200027e576200027d62000222565b5b80604052505050565b600062000293620001f3565b9050620002a1828262000251565b919050565b600067ffffffffffffffff821115620002c457620002c362000222565b5b620002cf8262000211565b9050602081019050919050565b60005b83811015620002fc578082015181840152602081019050620002df565b838111156200030c576000848401525b50505050565b6000620003296200032384620002a6565b62000287565b9050828152602081018484840111156200034857620003476200020c565b5b62000355848285620002dc565b509392505050565b600082601f83011262000375576200037462000207565b5b81516200038784826020860162000312565b91505092915050565b600060208284031215620003a957620003a8620001fd565b5b600082015167ffffffffffffffff811115620003ca57620003c962000202565b5b620003d8848285016200035d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200042957607f821691505b6020821081141562000440576200043f620003e1565b5b50919050565b610d2c80620004566000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100c6578063e7755761146100e4578063f2fde38b14610114578063f39d8c65146101305761007d565b8063248bfc3b146100825780632da96d731461009e578063715018a6146100bc575b600080fd5b61009c600480360381019061009791906107f6565b61014e565b005b6100a66101c9565b6040516100b391906109b8565b60405180910390f35b6100c46102aa565b005b6100ce6102be565b6040516100db9190610a1b565b60405180910390f35b6100fe60048036038101906100f99190610a36565b6102e7565b60405161010b9190610ac9565b60405180910390f35b61012e60048036038101906101299190610b17565b61039d565b005b610138610421565b6040516101459190610ac9565b60405180910390f35b6101566104af565b6003819080600181540180825580915050600190039060005260206000200160009091909190915090805190602001906101919291906105f9565b50816002826040516101a39190610b80565b908152602001604051809103902090805190602001906101c49291906105f9565b505050565b60606101d36104af565b6003805480602002602001604051908101604052809291908181526020016000905b828210156102a157838290600052602060002001805461021490610bc6565b80601f016020809104026020016040519081016040528092919081815260200182805461024090610bc6565b801561028d5780601f106102625761010080835404028352916020019161028d565b820191906000526020600020905b81548152906001019060200180831161027057829003601f168201915b5050505050815260200190600101906101f5565b50505050905090565b6102b26104af565b6102bc600061052d565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600281805160208101820180518482526020830160208501208183528095505050505050600091509050805461031c90610bc6565b80601f016020809104026020016040519081016040528092919081815260200182805461034890610bc6565b80156103955780601f1061036a57610100808354040283529160200191610395565b820191906000526020600020905b81548152906001019060200180831161037857829003601f168201915b505050505081565b6103a56104af565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040c90610c6a565b60405180910390fd5b61041e8161052d565b50565b6001805461042e90610bc6565b80601f016020809104026020016040519081016040528092919081815260200182805461045a90610bc6565b80156104a75780601f1061047c576101008083540402835291602001916104a7565b820191906000526020600020905b81548152906001019060200180831161048a57829003601f168201915b505050505081565b6104b76105f1565b73ffffffffffffffffffffffffffffffffffffffff166104d56102be565b73ffffffffffffffffffffffffffffffffffffffff161461052b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052290610cd6565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b82805461060590610bc6565b90600052602060002090601f016020900481019282610627576000855561066e565b82601f1061064057805160ff191683800117855561066e565b8280016001018555821561066e579182015b8281111561066d578251825591602001919060010190610652565b5b50905061067b919061067f565b5090565b5b80821115610698576000816000905550600101610680565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610703826106ba565b810181811067ffffffffffffffff82111715610722576107216106cb565b5b80604052505050565b600061073561069c565b905061074182826106fa565b919050565b600067ffffffffffffffff821115610761576107606106cb565b5b61076a826106ba565b9050602081019050919050565b82818337600083830152505050565b600061079961079484610746565b61072b565b9050828152602081018484840111156107b5576107b46106b5565b5b6107c0848285610777565b509392505050565b600082601f8301126107dd576107dc6106b0565b5b81356107ed848260208601610786565b91505092915050565b6000806040838503121561080d5761080c6106a6565b5b600083013567ffffffffffffffff81111561082b5761082a6106ab565b5b610837858286016107c8565b925050602083013567ffffffffffffffff811115610858576108576106ab565b5b610864858286016107c8565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156108d45780820151818401526020810190506108b9565b838111156108e3576000848401525b50505050565b60006108f48261089a565b6108fe81856108a5565b935061090e8185602086016108b6565b610917816106ba565b840191505092915050565b600061092e83836108e9565b905092915050565b6000602082019050919050565b600061094e8261086e565b6109588185610879565b93508360208202850161096a8561088a565b8060005b858110156109a657848403895281516109878582610922565b945061099283610936565b925060208a0199505060018101905061096e565b50829750879550505050505092915050565b600060208201905081810360008301526109d28184610943565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a05826109da565b9050919050565b610a15816109fa565b82525050565b6000602082019050610a306000830184610a0c565b92915050565b600060208284031215610a4c57610a4b6106a6565b5b600082013567ffffffffffffffff811115610a6a57610a696106ab565b5b610a76848285016107c8565b91505092915050565b600082825260208201905092915050565b6000610a9b8261089a565b610aa58185610a7f565b9350610ab58185602086016108b6565b610abe816106ba565b840191505092915050565b60006020820190508181036000830152610ae38184610a90565b905092915050565b610af4816109fa565b8114610aff57600080fd5b50565b600081359050610b1181610aeb565b92915050565b600060208284031215610b2d57610b2c6106a6565b5b6000610b3b84828501610b02565b91505092915050565b600081905092915050565b6000610b5a8261089a565b610b648185610b44565b9350610b748185602086016108b6565b80840191505092915050565b6000610b8c8284610b4f565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610bde57607f821691505b60208210811415610bf257610bf1610b97565b5b50919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610c54602683610a7f565b9150610c5f82610bf8565b604082019050919050565b60006020820190508181036000830152610c8381610c47565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610cc0602083610a7f565b9150610ccb82610c8a565b602082019050919050565b60006020820190508181036000830152610cef81610cb3565b905091905056fea2646970667358221220113edd13358e345132d984756ac685444229dab94a33cf180501957592bf540864736f6c63430008090033";

type InterplanetaryBoxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InterplanetaryBoxConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InterplanetaryBox__factory extends ContractFactory {
  constructor(...args: InterplanetaryBoxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    key: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<InterplanetaryBox> {
    return super.deploy(key, overrides || {}) as Promise<InterplanetaryBox>;
  }
  override getDeployTransaction(
    key: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(key, overrides || {});
  }
  override attach(address: string): InterplanetaryBox {
    return super.attach(address) as InterplanetaryBox;
  }
  override connect(signer: Signer): InterplanetaryBox__factory {
    return super.connect(signer) as InterplanetaryBox__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InterplanetaryBoxInterface {
    return new utils.Interface(_abi) as InterplanetaryBoxInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InterplanetaryBox {
    return new Contract(address, _abi, signerOrProvider) as InterplanetaryBox;
  }
}
